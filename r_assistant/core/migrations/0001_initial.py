# Generated by Django 5.0.14 on 2025-09-23 03:17

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('user', '用户'), ('assistant', 'AI助手')], max_length=20)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'conversation_history',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('api_call', 'API调用'), ('response_time', '响应时间'), ('error_rate', '错误率'), ('user_activity', '用户活动')], max_length=50)),
                ('metric_name', models.CharField(max_length=255)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'performance_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('request_type', models.CharField(choices=[('explain', '代码解释'), ('answer', '作业求解'), ('talk', '智能对话')], max_length=20)),
                ('input_content', models.TextField()),
                ('response_content', models.TextField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'request_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CodeAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('quality', '代码质量'), ('complexity', '复杂度分析'), ('optimization', '优化建议'), ('testing', '测试建议')], max_length=50)),
                ('score', models.FloatField(blank=True, null=True)),
                ('details', models.JSONField(default=dict)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='core.requestlog')),
            ],
            options={
                'db_table': 'code_analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='CodeSolution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('solution_number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('code', models.TextField()),
                ('explanation', models.TextField()),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='core.requestlog')),
            ],
            options={
                'db_table': 'code_solutions',
                'ordering': ['solution_number'],
                'unique_together': {('request_log', 'solution_number')},
            },
        ),
    ]
